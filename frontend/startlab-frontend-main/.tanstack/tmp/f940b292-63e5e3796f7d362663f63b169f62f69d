/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as BasicLayoutRouteImport } from './routes/_basic-layout'
import { Route as BasicLayoutPartnersRouteImport } from './routes/_basic-layout/partners'
import { Route as BasicLayoutParticipantsRouteImport } from './routes/_basic-layout/participants'
import { Route as BasicLayoutHomeRouteImport } from './routes/_basic-layout/home'
import { Route as BasicLayoutNewsIndexRouteImport } from './routes/_basic-layout/news/index'
import { Route as BasicLayoutThankYouStartupRouteImport } from './routes/_basic-layout/thank-you.startup'
import { Route as BasicLayoutThankYouScienceRouteImport } from './routes/_basic-layout/thank-you.science'
import { Route as BasicLayoutApplyStartupRouteImport } from './routes/_basic-layout/apply/startup'
import { Route as BasicLayoutApplyScienceRouteImport } from './routes/_basic-layout/apply/science'
import { Route as BasicLayoutNewsNewsIdIndexRouteImport } from './routes/_basic-layout/news/$newsId/index'

const BasicLayoutRoute = BasicLayoutRouteImport.update({
  id: '/_basic-layout',
  getParentRoute: () => rootRouteImport,
} as any)
const BasicLayoutPartnersRoute = BasicLayoutPartnersRouteImport.update({
  id: '/partners',
  path: '/partners',
  getParentRoute: () => BasicLayoutRoute,
} as any)
const BasicLayoutParticipantsRoute = BasicLayoutParticipantsRouteImport.update({
  id: '/participants',
  path: '/participants',
  getParentRoute: () => BasicLayoutRoute,
} as any)
const BasicLayoutHomeRoute = BasicLayoutHomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => BasicLayoutRoute,
} as any)
const BasicLayoutNewsIndexRoute = BasicLayoutNewsIndexRouteImport.update({
  id: '/news/',
  path: '/news/',
  getParentRoute: () => BasicLayoutRoute,
} as any)
const BasicLayoutThankYouStartupRoute =
  BasicLayoutThankYouStartupRouteImport.update({
    id: '/thank-you/startup',
    path: '/thank-you/startup',
    getParentRoute: () => BasicLayoutRoute,
  } as any)
const BasicLayoutThankYouScienceRoute =
  BasicLayoutThankYouScienceRouteImport.update({
    id: '/thank-you/science',
    path: '/thank-you/science',
    getParentRoute: () => BasicLayoutRoute,
  } as any)
const BasicLayoutApplyStartupRoute = BasicLayoutApplyStartupRouteImport.update({
  id: '/apply/startup',
  path: '/apply/startup',
  getParentRoute: () => BasicLayoutRoute,
} as any)
const BasicLayoutApplyScienceRoute = BasicLayoutApplyScienceRouteImport.update({
  id: '/apply/science',
  path: '/apply/science',
  getParentRoute: () => BasicLayoutRoute,
} as any)
const BasicLayoutNewsNewsIdIndexRoute =
  BasicLayoutNewsNewsIdIndexRouteImport.update({
    id: '/news/$newsId/',
    path: '/news/$newsId/',
    getParentRoute: () => BasicLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/home': typeof BasicLayoutHomeRoute
  '/participants': typeof BasicLayoutParticipantsRoute
  '/partners': typeof BasicLayoutPartnersRoute
  '/apply/science': typeof BasicLayoutApplyScienceRoute
  '/apply/startup': typeof BasicLayoutApplyStartupRoute
  '/thank-you/science': typeof BasicLayoutThankYouScienceRoute
  '/thank-you/startup': typeof BasicLayoutThankYouStartupRoute
  '/news': typeof BasicLayoutNewsIndexRoute
  '/news/$newsId': typeof BasicLayoutNewsNewsIdIndexRoute
}
export interface FileRoutesByTo {
  '/home': typeof BasicLayoutHomeRoute
  '/participants': typeof BasicLayoutParticipantsRoute
  '/partners': typeof BasicLayoutPartnersRoute
  '/apply/science': typeof BasicLayoutApplyScienceRoute
  '/apply/startup': typeof BasicLayoutApplyStartupRoute
  '/thank-you/science': typeof BasicLayoutThankYouScienceRoute
  '/thank-you/startup': typeof BasicLayoutThankYouStartupRoute
  '/news': typeof BasicLayoutNewsIndexRoute
  '/news/$newsId': typeof BasicLayoutNewsNewsIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_basic-layout': typeof BasicLayoutRouteWithChildren
  '/_basic-layout/home': typeof BasicLayoutHomeRoute
  '/_basic-layout/participants': typeof BasicLayoutParticipantsRoute
  '/_basic-layout/partners': typeof BasicLayoutPartnersRoute
  '/_basic-layout/apply/science': typeof BasicLayoutApplyScienceRoute
  '/_basic-layout/apply/startup': typeof BasicLayoutApplyStartupRoute
  '/_basic-layout/thank-you/science': typeof BasicLayoutThankYouScienceRoute
  '/_basic-layout/thank-you/startup': typeof BasicLayoutThankYouStartupRoute
  '/_basic-layout/news/': typeof BasicLayoutNewsIndexRoute
  '/_basic-layout/news/$newsId/': typeof BasicLayoutNewsNewsIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/home'
    | '/participants'
    | '/partners'
    | '/apply/science'
    | '/apply/startup'
    | '/thank-you/science'
    | '/thank-you/startup'
    | '/news'
    | '/news/$newsId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/home'
    | '/participants'
    | '/partners'
    | '/apply/science'
    | '/apply/startup'
    | '/thank-you/science'
    | '/thank-you/startup'
    | '/news'
    | '/news/$newsId'
  id:
    | '__root__'
    | '/_basic-layout'
    | '/_basic-layout/home'
    | '/_basic-layout/participants'
    | '/_basic-layout/partners'
    | '/_basic-layout/apply/science'
    | '/_basic-layout/apply/startup'
    | '/_basic-layout/thank-you/science'
    | '/_basic-layout/thank-you/startup'
    | '/_basic-layout/news/'
    | '/_basic-layout/news/$newsId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  BasicLayoutRoute: typeof BasicLayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_basic-layout': {
      id: '/_basic-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof BasicLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_basic-layout/partners': {
      id: '/_basic-layout/partners'
      path: '/partners'
      fullPath: '/partners'
      preLoaderRoute: typeof BasicLayoutPartnersRouteImport
      parentRoute: typeof BasicLayoutRoute
    }
    '/_basic-layout/participants': {
      id: '/_basic-layout/participants'
      path: '/participants'
      fullPath: '/participants'
      preLoaderRoute: typeof BasicLayoutParticipantsRouteImport
      parentRoute: typeof BasicLayoutRoute
    }
    '/_basic-layout/home': {
      id: '/_basic-layout/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof BasicLayoutHomeRouteImport
      parentRoute: typeof BasicLayoutRoute
    }
    '/_basic-layout/news/': {
      id: '/_basic-layout/news/'
      path: '/news'
      fullPath: '/news'
      preLoaderRoute: typeof BasicLayoutNewsIndexRouteImport
      parentRoute: typeof BasicLayoutRoute
    }
    '/_basic-layout/thank-you/startup': {
      id: '/_basic-layout/thank-you/startup'
      path: '/thank-you/startup'
      fullPath: '/thank-you/startup'
      preLoaderRoute: typeof BasicLayoutThankYouStartupRouteImport
      parentRoute: typeof BasicLayoutRoute
    }
    '/_basic-layout/thank-you/science': {
      id: '/_basic-layout/thank-you/science'
      path: '/thank-you/science'
      fullPath: '/thank-you/science'
      preLoaderRoute: typeof BasicLayoutThankYouScienceRouteImport
      parentRoute: typeof BasicLayoutRoute
    }
    '/_basic-layout/apply/startup': {
      id: '/_basic-layout/apply/startup'
      path: '/apply/startup'
      fullPath: '/apply/startup'
      preLoaderRoute: typeof BasicLayoutApplyStartupRouteImport
      parentRoute: typeof BasicLayoutRoute
    }
    '/_basic-layout/apply/science': {
      id: '/_basic-layout/apply/science'
      path: '/apply/science'
      fullPath: '/apply/science'
      preLoaderRoute: typeof BasicLayoutApplyScienceRouteImport
      parentRoute: typeof BasicLayoutRoute
    }
    '/_basic-layout/news/$newsId/': {
      id: '/_basic-layout/news/$newsId/'
      path: '/news/$newsId'
      fullPath: '/news/$newsId'
      preLoaderRoute: typeof BasicLayoutNewsNewsIdIndexRouteImport
      parentRoute: typeof BasicLayoutRoute
    }
  }
}

interface BasicLayoutRouteChildren {
  BasicLayoutHomeRoute: typeof BasicLayoutHomeRoute
  BasicLayoutParticipantsRoute: typeof BasicLayoutParticipantsRoute
  BasicLayoutPartnersRoute: typeof BasicLayoutPartnersRoute
  BasicLayoutApplyScienceRoute: typeof BasicLayoutApplyScienceRoute
  BasicLayoutApplyStartupRoute: typeof BasicLayoutApplyStartupRoute
  BasicLayoutThankYouScienceRoute: typeof BasicLayoutThankYouScienceRoute
  BasicLayoutThankYouStartupRoute: typeof BasicLayoutThankYouStartupRoute
  BasicLayoutNewsIndexRoute: typeof BasicLayoutNewsIndexRoute
  BasicLayoutNewsNewsIdIndexRoute: typeof BasicLayoutNewsNewsIdIndexRoute
}

const BasicLayoutRouteChildren: BasicLayoutRouteChildren = {
  BasicLayoutHomeRoute: BasicLayoutHomeRoute,
  BasicLayoutParticipantsRoute: BasicLayoutParticipantsRoute,
  BasicLayoutPartnersRoute: BasicLayoutPartnersRoute,
  BasicLayoutApplyScienceRoute: BasicLayoutApplyScienceRoute,
  BasicLayoutApplyStartupRoute: BasicLayoutApplyStartupRoute,
  BasicLayoutThankYouScienceRoute: BasicLayoutThankYouScienceRoute,
  BasicLayoutThankYouStartupRoute: BasicLayoutThankYouStartupRoute,
  BasicLayoutNewsIndexRoute: BasicLayoutNewsIndexRoute,
  BasicLayoutNewsNewsIdIndexRoute: BasicLayoutNewsNewsIdIndexRoute,
}

const BasicLayoutRouteWithChildren = BasicLayoutRoute._addFileChildren(
  BasicLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  BasicLayoutRoute: BasicLayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
